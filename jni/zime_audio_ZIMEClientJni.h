/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class zime_audio_ZIMEClientJni */

#ifndef _Included_zime_audio_ZIMEClientJni
#define _Included_zime_audio_ZIMEClientJni
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    Create
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_Create
  (JNIEnv *, jclass);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    Destroy
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_Destroy
  (JNIEnv *, jclass);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    Exit
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_Exit
( JNIEnv *, jclass );

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    GetVersionInfo
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_zime_media_ZIMEClientJni_GetVersionInfo
  (JNIEnv *, jclass);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    GetInfoByErrNo
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_zime_media_ZIMEClientJni_GetInfoByErrNo
  (JNIEnv *, jclass, jint);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    Authenticate
 * Signature: (Ljava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_Authenticate
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    Init
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_Init
  (JNIEnv *, jclass);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    Terminate
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_Terminate
  (JNIEnv *, jclass);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    SetLogLevel
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_SetLogLevel
  (JNIEnv *, jclass, jint);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    SetNotify
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_zime_media_ZIMEClientJni_SetNotify
  (JNIEnv *, jclass);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    CreateChannel
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_CreateChannel
  (JNIEnv *, jclass);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    DeleteChannel
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_DeleteChannel
  (JNIEnv *, jclass, jint);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    MaxNumOfChannels
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_MaxNumOfChannels
  (JNIEnv *, jclass);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    SetLocalReceiver
 * Signature: (IIILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_SetLocalReceiver
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    GetLocalReceiver
 * Signature: (ILzime/audio/ZIMEClientJni/IntParam;Lzime/audio/ZIMEClientJni/IntParam;Lzime/audio/ZIMEClientJni/IntParam;Lzime/audio/ZIMEClientJni/IntParam;Lzime/audio/ZIMEClientJni/StrParam;I)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_GetLocalReceiver
  (JNIEnv *, jclass, jint, jobject, jobject, jobject, jobject, jobject, jint);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    SetSendDestination
 * Signature: (IILjava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_SetSendDestination
  (JNIEnv *, jclass, jint, jint, jstring, jint);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    GetSendDestination
 * Signature: (ILzime/audio/ZIMEClientJni/IntParam;Lzime/audio/ZIMEClientJni/IntParam;Lzime/audio/ZIMEClientJni/IntParam;Lzime/audio/ZIMEClientJni/IntParam;Lzime/audio/ZIMEClientJni/StrParam;I)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_GetSendDestination
  (JNIEnv *, jclass, jint, jobject, jobject, jobject, jobject, jobject, jint);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    StartListen
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_StartListen
  (JNIEnv *, jclass, jint);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    StopListen
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_StopListen
  (JNIEnv *, jclass, jint);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    StartPlayout
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_StartPlayout
  (JNIEnv *, jclass, jint);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    StopPlayout
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_StopPlayout
  (JNIEnv *, jclass, jint);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    StartSend
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_StartSend
  (JNIEnv *, jclass, jint);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    StopSend
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_StopSend
  (JNIEnv *, jclass, jint);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    PutOnHold
 * Signature: (IZ)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_PutOnHold
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    GetNumOfCodecs
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_GetNumOfCodecs
  (JNIEnv *, jclass);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    GetNumOfVideoCodecs
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_GetNumOfVideoCodecs
  (JNIEnv *, jclass);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    GetCodec
 * Signature: (ILzime/audio/ZIMEClientJni/ZIMECodeInfo;)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_GetCodec
  (JNIEnv *, jclass, jint, jobject);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    SetSendCodec
 * Signature: (ILzime/audio/ZIMEClientJni/ZIMECodeInfo;)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_SetSendCodec
  (JNIEnv *, jclass, jint, jobject);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    GetSendCodec
 * Signature: (ILzime/audio/ZIMEClientJni/ZIMECodeInfo;)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_GetSendCodec
  (JNIEnv *, jclass, jint, jobject);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    SetRecPayloadType
 * Signature: (ILzime/audio/ZIMEClientJni/ZIMECodeInfo;)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_SetRecPayloadType
  (JNIEnv *, jclass, jint, jobject);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    GetRecCodec
 * Signature: (ILzime/audio/ZIMEClientJni/ZIMECodeInfo;)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_GetRecCodec
  (JNIEnv *, jclass, jint, jobject);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    SetModeSubset
 * Signature:
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_SetModeSubset
  (JNIEnv *, jclass, jint, jbyteArray, jint, jboolean);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    SetSourceFilter
 * Signature: (IIILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_SetSourceFilter
  (JNIEnv *, jclass, jint, jint, jstring);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    SetSendSSRC
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_SetSendSSRC
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    GetSendSSRC
 * Signature: (ILzime/audio/ZIMEClientJni/IntParam;)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_GetSendSSRC
  (JNIEnv *, jclass, jint, jobject);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    SetAGCStatus
 * Signature: (Z)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_SetAGCStatus
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    GetAGCStatus
 * Signature: (Lzime/audio/ZIMEClientJni/BoolParam;Lzime/audio/ZIMEClientJni/IntParam;)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_GetAGCStatus
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    SetECStatus
 * Signature: (Z)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_SetECStatus
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    GetECStatus
 * Signature: (Lzime/audio/ZIMEClientJni/BoolParam;)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_GetECStatus
  (JNIEnv *, jclass, jobject);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    SetNSStatus
 * Signature: (Z)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_SetNSStatus
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    SetInputMute
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_SetInputMute
  (JNIEnv *, jclass,jint iChannel, jboolean);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    GetNSStatus
 * Signature: (Lzime/audio/ZIMEClientJni/BoolParam;)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_GetNSStatus
  (JNIEnv *, jclass, jobject);



/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    SetSpeakerMode
 * Signature: (Z)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_SetSpeakerMode
  (JNIEnv *, jclass, jboolean);
  
/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    SendDTMF
 * Signature: (IIZII)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_SetDTMFFeedbackStatus
  (JNIEnv *, jclass, jboolean, jboolean);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    SetSpeakerVolume
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_SetSpeakerVolume
  (JNIEnv *, jclass, jint);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    GetSpeakerVolume
 * Signature: (Lzime/audio/ZIMEClientJni/IntParam;)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_GetSpeakerVolume
  (JNIEnv *, jclass, jobject);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    SetMicVolume
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_SetMicVolume
  (JNIEnv *, jclass, jint);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    GetMicVolume
 * Signature: (Lzime/audio/ZIMEClientJni/IntParam;)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_GetMicVolume
  (JNIEnv *, jclass, jobject);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    SetInputMute
 * Signature: (IZ)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_SetInputMute
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    GetSpeechInputLevel
 * Signature: (Lzime/audio/ZIMEClientJni/IntParam;)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_GetSpeechInputLevel
  (JNIEnv *, jclass, jobject);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    GetSpeechOutputLevel
 * Signature: (Lzime/audio/ZIMEClientJni/IntParam;)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_GetSpeechOutputLevel
  (JNIEnv *, jclass, jobject);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    GetNumOfSoundDevices
 * Signature: (Lzime/audio/ZIMEClientJni/IntParam;Lzime/audio/ZIMEClientJni/IntParam;)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_GetNumOfSoundDevices
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    GetRecordingDeviceName
 * Signature: (ILzime/audio/ZIMEClientJni/StrParam;Lzime/audio/ZIMEClientJni/IntParam;Lzime/audio/ZIMEClientJni/StrParam;I)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_GetRecordingDeviceName
  (JNIEnv *, jclass, jint, jobject, jobject, jobject, jint);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    GetPlayoutDeviceName
 * Signature: (ILzime/audio/ZIMEClientJni/StrParam;Lzime/audio/ZIMEClientJni/IntParam;Lzime/audio/ZIMEClientJni/StrParam;I)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_GetPlayoutDeviceName
  (JNIEnv *, jclass, jint, jobject, jobject, jobject, jint);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    SetSoundDevices
 * Signature: (Ljava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_SetSoundDevices__Ljava_lang_String_2Ljava_lang_String_2
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    SetSoundDevices
 * Signature: (IIZZI)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_SetSoundDevices__IIZZI
  (JNIEnv *, jclass, jint, jint, jboolean, jboolean, jint);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    SetSampleRate
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_SetSampleRate
  (JNIEnv *, jclass, jint);
  
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_SetAudioCallBack
(JNIEnv *env, jclass, jobject audioCallBack);

JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_DisconnectDevice
  (JNIEnv *, jclass, jint i_s32ChId, jint i_nDeviceType);

JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_ConnectDevice
  (JNIEnv *, jclass, jint i_s32ChId, jint i_nDeviceType);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    SetSendDTMFPayloadType
 * Signature: (I/B)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_SetSendDTMFPayloadType
(JNIEnv *, jclass, jint i_s32ChId, jbyte i_u8PT);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    SendDTMF
 * Signature: (I/B/I/I)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_SendDTMF
(JNIEnv *, jclass, jint i_s32ChId, jint i_s32EvtNum, jboolean i_bOutBan,
		jint i_s32LenMs = 160, jint i_s32Level = 10);

/*
 * Class:     zime_audio_ZIMEClientJni
 * Method:    SetDTMFFeedbackStatus
 * Signature: (B/B)I
 */
JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_SetDTMFFeedbackStatus
(JNIEnv *, jclass, jboolean i_bEnable, jboolean i_bDirectFeedback = false);


/*JNIEXPORT jint JNICALL Java_zime_media_ZIMEVideoClientJNI_GetAudioQosStat
(JNIEnv *, jclass, jint i_s32ChId, jobject, jobject);*/

JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_GetAudioQosStat
(JNIEnv *env, jclass, jint i_s32ChId, jobject o_uplinkQosStat, jobject o_downlinkQosStat );


JNIEXPORT jint JNICALL Java_zime_media_ZIMEClientJni_SetVQEScene( JNIEnv *, jclass, jint i_eScene);


#ifdef __cplusplus
}
#endif
#endif
